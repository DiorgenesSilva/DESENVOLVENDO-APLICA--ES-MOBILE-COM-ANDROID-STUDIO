Banco de Dados SQLITE
Neste tópico, vamos criar um aplicativo de anotações. Para isso, vamos aprender a criar tabelas, além de consultar, inserir e excluir dados utilizando o banco de dados SQLite.

Conteúdos:

* Banco de dados SQLite
* Criação de aplicativo de anotações
* Criação de tabelas
* Consulta, inserção e exclusão de dados. 

Ao finalizar este tópico, você será capaz de:

* Criar um aplicativo de anotações.
* Inserir tabelas, e consultar, inserir e excluir dados da 
* aplicação por meio do banco de dados SQLite.


Importância da Armazenagem de Dados
No desenvolvimento de um aplicativo, muitas vezes, precisamos armazenar alguns dados. 
Para gerenciar esses dados e disponibilizá-los no aplicativo, precisamos utilizar um banco de dados.

Podemos armazenar dados utilizando bancos de dados web, como o SQL Server. No entanto, nesse caso, precisamos ter um sistema que faça a comunicação do aplicativo com o banco de dados. 
Podemos também utilizar o SQLite.

Você sabe o que é o SQLite? Vamos descobrir!

SQLite
O SQLite é um banco de dados que fica armazenado no próprio aparelho do usuário. Por conta disso, não precisa de nenhum sistema para realizar as transações. 
Cada aplicativo pode ter vários bancos de dados, que não são visíveis para os outros aplicativos instalados no aparelho.

Neste tópico, aprenderemos a criar tabelas, além de consultar, inserir e excluir dados utilizando um banco de dados SQLite. 
Vamos lá?

Classes da API Utilizadas
Tanto para criar tabelas quanto para consultar, inserir e excluir dados, utilizaremos, basicamente, duas classes da API de banco de dados do SDK do Android.  

SQLiteDatabase
Classe com as funções de gerenciamento dos dados.
 
SQLiteOpenHelper
Classe com as funções de criação do banco e controle de versão, para verificar se existe a necessidade de atualizar a estrutura do banco de dados.

Para demonstrarmos como funcionam essas classes, vamos criar um aplicativo de anotações. Por meio desse aplicativo, será possível criar uma anotação, visualizar todas as notas cadastradas em uma listagem, além de realizar a edição e exclusão de uma anotação.

Aplicativo de Anotações
Para começar, vamos criar um projeto novo no Android Studio e uma atividade vazia (Empty Activity) com o nome de TelaInicial.

O Android Studio irá criar o projeto com a tela separada em dois arquivos.   

TelaInicial.java
Localizado na pasta app/java, é o arquivo que possui a programação da tela. Nela vamos criar as variáveis e seus métodos.

activity_tela_inicial.xml
Localizado na pasta app/res/layout, é o arquivo responsável pela diagramação dos componentes. Nela vamos criar todos os componentes e definir suas propriedades.

Também vamos criar um ListView, onde colocaremos todas as anotações e um botão que irá abrir a tela para criar uma anotação.
crie um novo projeto no Android Studio
Em seguida crie uma atividade vazia(Empry_activity)pode ser nome  TelaInicial
Abra o Activity.tela_inicial.xml
Vamos criar u ListView onde colocaremos todas as anotações,e um botao que ira abrir a tela para criar uma anotação.

<xml version="1.0"ecoding="utf-8"?>
<Linearlyout xmlns:android="http//achemas.android.com/apk/res/android" 
        xmls:yools="http.achemas.android.com/tools"
        android:id="@id/activity_tela_inicial"
        android:layout_width"math_parent"
        android:paddingBotton="16dp"
        android:paddingleft="16dp"
        android:paddingRight="16dp"
        android:paddingTop="16dp"
        android:orientation="Vertical"
        tools:context="javamobile.minhasanotacoes.TelaInicial">

        <TextView
                android:id="@+id/titulo"
                android:layout_width="math_parent"
                android:layout_height="wrap_content"
                android:text="Notas"
                android:layout_alingParentTop="true"
                android:layout_alingParentStart="true"
                android:textSize="24sp"
                android:textAlignment"center" />
   // APARTIR DESTA LINHA IREMOS ICREMENTAR O TEXT VIEW( id listaDeNotas)  ,ou seja,um lista que serao mostradas ao usuarios todas as anotações que estao armazenadas no banco de dados \\  

         <ListView
                android:id="@+id/listaDeNotas"
                android:layout_width="wrap_parent"
                android:layout_height="200dp"
                android:layout_weight="0.92" />

          <Button 
                android:id="@+id/BotaoCriarAnotaçao"
                android:text="Criar nova anotação"
                android:layout_width="math_parent"
                android: layout_height="wrap_content" />
</Linearlayout>               

Tela de Anotação
Vamos, agora, desenvolver uma tela cuja função será a de criar uma anotação

Crie uma atividade vazia (Empry Activity) clicando com o botao direito do mouse sobre a pasta app.

Em seguida,selecione as opções New> Activity > Empthy Activity.
No campo Activity Name,digite o nome da tela (Activity)> neste caso,vamos nomeá-la como "CriarAnotação"
Abra o arquivo Activity_criar_anotaçao.xml para criar os  componentes.

Classe GerenciarBanco

Vamos criar, agora, as duas classes que serão responsáveis pelo banco de dados, a classe “GerenciarBanco“, que será responsável por criar o banco de dados, e a tabela que vamos utilizar para armazenar as nossas anotações.

Para criar a classe"Gerenciarbanco",clique com o botao direito do mouse sobre a pasta javamobile.minhasanotacoes e selecione a opção New > Java class.
Uma janela para definir o nome da nova classe sera aberta 
preencha o camponame com "gerenciarbanco"e altere o campo package para "javamobile.minhasanotaçoes.bancodedado".
Depois de criar a classe,vamos alterá-la para estender a classe "SQLiteOpenhelper",definor o nome do banco de dados,criar bo script SQL para criar a tabela e outro script para remover a tabela,que sera executado caso necessario.

exemplo:

public static final String NOME BANCO ="Bancodedados.db";
Neta linha de codigo acima definimos o nome do banco de dados

public stayic final int VERSAO = 1;
Nesta linha de codigo estamos definindo a versao do banco de dados 

Esta versao serve para realizar um "update"no banco caso seja feita alguma atualização na estrutura do banco de dados.
Dessa forma,basta alterarmos o numero da versao para o numero posterior para que,automaticamente,ele exclua a tabela existente e crie uma nova com a estrutura atualiada.

Agora que temos a estrutura do nosso banco de dados pronta, vamos criar a classe “BancoDeDados”.

Essa classe será responsável pelas instruções SQL que vamos utilizar para listar, consultar, inserir, editar e excluir as anotações.

Clique com o botão direito do mouse sobre a pasta javamobile,minhasanotaçoes e selecione a opçãonew > Java Classe

Uma janela para criar uma nova classe sera aberta 

Preencha o campo Name com "BancoDeDados" e altere o campo para Package para "javamobile.minhasanotacoes.Bancodedados"

Dessa forma, sera criada a classe "Banco de dados"no pacote  "javamobile.minhasanotacoes.Bancodedados" 

Vamos alterá-la para manter a classe "SQLiteOpenHelper",definir o nome do banco de dados,CRIAR O script SQL para criar a tabela e outro script para remover a tabela,que sera executado caso necessario.

Agora vamos criar o método "CriarAnotacao",que recebera dois paramentros  um do tipo String",um titulo e um conteudo,e adicionara ambos ao banco  de dados.vejamos:

public booleans criarAnotacoes (String titulo, String Conteudo  
   banco = gerenciarbanco.getWritableDatabase(); //nesta linha estamos requisitando o banco de dados emmodo leitra e escrita.

 /* Nessas 3 linhas.estamos crianso um objetodo tipo"ContentValues",com o conteudo da anotaçao e seu tiulo. */
   ContentValues Valores = new ContentValues();
   Valores.put("titulo",titulo;
   Valores.put("conteudo",conteudo);

   iong resultado = banco.insert("anotacoes", null ,valores); // nesta lista estamos inserindo umanovaanotação nobanco de dados 

   banco.close(); // Nesta linha estamos fechando a conexao com o banco de dados.

   return resultaso > 0 ; // E ,na linha 27 ,estamos retornando "true",se a inserçao for realizada com sucesso,ou "false",caso ocorra alguma falha.


   Métodos Criar e Cancelar

Para finalizarmos nossa tela de criação de anotações, vamos criar os métodos que serão chamados por meio dos cliques nos botões Criar e Cancelar.

Abra arquivo CriarAnotacao.java e adicione os metodos "voltar" e "criarAnotavao"

package javamobile.minhasanotacoes;

import ...
public class CriarAnotacao extends AppComparacaoActivity { 

     @Override 
     protecd void onCreate(Bundle savedanotacoes) { 
            super.oncreate (savedInstanceState) {
            setConvertView(p.layout.Activity_criar_anotacao) ;   
    }
    /* Daqui ate o fechamento ,temos o metodo "voltar ",que ira abrir a janela do nosso aplicatico 
     public void voltar (View v) {
            Intent startNewActivity = new Intent 9thi TelaInicial.Class);
            StartaActivity(startNewActivity) ;

     }    */

     public void CriarAnotacao (View v) { 
            BancoDeDados bancoDeDados = new bancoDeDados (getBasecontent())? // nesta linha,estamos instaciando a classe"bancoDedados"]

            /* 
            EditText titulo = (editText) findViewByid(R.id.campoconteudo); 
            EditText conteudo = (EditText) findViewByid(R.id.compoConteudo);
            Nessas duas linhas estamos obtendo os compos digitaveis e setando em variaveis    
                 */

            booleans resultado = Bancodedados.CriarAnotacao(titulo.ggettext().toString(),conteudo.gettext().toString()) ; // estamos lendo oque foi digitado nos campos editaveis e passando esses dados como parametros para o metodo "CriarAnotacao" da classe "BancoDeDados".Desssa forma,sera feita a inserçao no banco,que retornará um valor "true" ou "false". Criaremos um  Toast para avisar o usuario sobre  a inserçao da anotaçao.

            if (resultado|) {
                    Toast.maketext(getaplicationContext(),"Anotação criada com sucesso ", Toast.LENGTH_LONG).show();
            }else{ 
                Toast.maketext(getaplicationContext(),"infelizmente ocorreu um erro,tente novamente",Toast.LENGTH_LONG).show(); 
            }

            voltar(v) ; // Na linha estamos chmando o metodo "Voltar",que ira  carregar a tela inicial do nosso aplicativo novamente.

   Agora ,deve ra ir ate o arquivo de layout da tela CriarAnotacao para setar as açoes a serem realizadas por meio do clique nos botões Criar e Cancelar.

Apresentação de Toast
Pronto, a rotina para criar e cancelar anotações está codificada. Agora, podemos testar e, realmente, criar uma anotação que será armazenada no banco de dados.



     }
